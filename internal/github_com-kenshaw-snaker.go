// Code generated by 'yaegi extract github.com/kenshaw/snaker'. DO NOT EDIT.

package internal

import (
	"github.com/kenshaw/snaker"
	"reflect"
)

func init() {
	Symbols["github.com/kenshaw/snaker/snaker"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CamelToSnake":              reflect.ValueOf(snaker.CamelToSnake),
		"CamelToSnakeIdentifier":    reflect.ValueOf(snaker.CamelToSnakeIdentifier),
		"CommonInitialisms":         reflect.ValueOf(snaker.CommonInitialisms),
		"CommonPlurals":             reflect.ValueOf(snaker.CommonPlurals),
		"DefaultInitialisms":        reflect.ValueOf(&snaker.DefaultInitialisms).Elem(),
		"ForceCamelIdentifier":      reflect.ValueOf(snaker.ForceCamelIdentifier),
		"ForceLowerCamelIdentifier": reflect.ValueOf(snaker.ForceLowerCamelIdentifier),
		"IsInitialism":              reflect.ValueOf(snaker.IsInitialism),
		"New":                       reflect.ValueOf(snaker.New),
		"NewDefaultInitialisms":     reflect.ValueOf(snaker.NewDefaultInitialisms),
		"SnakeToCamel":              reflect.ValueOf(snaker.SnakeToCamel),
		"SnakeToCamelIdentifier":    reflect.ValueOf(snaker.SnakeToCamelIdentifier),
		"ToIdentifier":              reflect.ValueOf(snaker.ToIdentifier),
		"ToKebab":                   reflect.ValueOf(snaker.ToKebab),

		// type definitions
		"Initialisms": reflect.ValueOf((*snaker.Initialisms)(nil)),
	}
}
